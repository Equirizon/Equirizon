---
import { getImage } from 'astro:assets'
import { Button } from './ui/button'
import HeroImage from './ui/HeroImage.tsx'
import Me from '@assets/me-cutout.png'
import ParallaxBG from '@assets/hero-bg.png'
import CVButton from './CVButton'

const heroParallaxBackground = await getImage({
  src: ParallaxBG,
  width: 1200,
  quality: 70,
  format: 'webp',
})

const heroImage = await getImage({
  src: Me,
  width: 1200,
  quality: 70,
  format: 'webp',
})
---

<style is:inline>
  :root {
    --hero-min-height: 50rem;
  }
</style>

<section
  id='hero'
  class='flex h-screen min-h-[var(--hero-min-height)] w-full flex-col items-center justify-center gap-10 lg:pt-16'>
  <div class='mx-auto flex w-[min(85vw,70rem)] flex-col-reverse items-center justify-between xl:flex-row'>
    <div class='flex flex-col gap-6'>
      <div>
        <h4 class='text-muted-foreground font-bold'>Welcome to my Personal Portfolio</h4>
        <h1
          class='text-accent-foreground/80 max-w-lg bg-clip-text text-4xl font-bold tracking-tight text-shadow-lg lg:text-5xl'>
          Hello, my name's <span
            class='to-theme-color-primary from-theme-color-secondary bg-linear-45 bg-clip-text font-extrabold tracking-normal text-transparent text-shadow-lg'
            >Brandon</span
          >
        </h1>
      </div>
      <div class='flex flex-col gap-2'>
        <h4 class='text-muted-foreground divide-x-2 font-semibold *:border-gray-400 *:px-2'>
          I'm a<span class='text-typescript'>Front-end Developer</span><span class='text-soundcloud'
            >Music Producer</span
          ><span class='text-graphics'>Graphic Designer</span>
        </h4>
        <p class='text-muted-foreground text-sm'>
          I build apps for the modern web using TypeScript, React, and Tailwind CSS
        </p>
      </div>
      <div class='flex flex-row gap-1 items-center justify-start'>
        <a href='#about'><Button variant='outline'>Learn More</Button></a>
        <CVButton client:load />
      </div>
    </div>
    <HeroImage parallaxBackground={heroParallaxBackground} heroImage={heroImage} client:visible />
  </div>
  <div
    class='absolute top-0 left-0 -z-1 h-screen min-h-[var(--hero-min-height)] w-full bg-linear-60 from-fuchsia-950/70 to-indigo-950/70 opacity-0 shadow-lg transition-all dark:opacity-100'>
  </div>
  <div
    class='absolute top-0 left-0 -z-1 h-screen min-h-[var(--hero-min-height)] w-full bg-linear-60 from-fuchsia-200/70 to-sky-200/70 shadow-lg transition-all dark:opacity-0'>
  </div>
</section>
